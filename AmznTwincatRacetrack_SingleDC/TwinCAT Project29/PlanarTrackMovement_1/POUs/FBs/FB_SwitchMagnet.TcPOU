<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="FB_SwitchMagnet" Id="{596e482d-b5f1-014c-1b84-be1ac17def4b}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_SwitchMagnet

VAR_INPUT
	stSwitchConfig				: REFERENCE TO ST_SwitchConfig := GVL_General.stSwitchConfig;
	ShuttleVelocity				: REFERENCE TO LREAL := GVL_General.stMoverConfig.NormalVelo;
	SafetyPermIntlk				: REFERENCE TO BOOL;
END_VAR
//VAR_IN_OUT
//	MoverRef						: 
//END_VAR
VAR
	TimeoutTime					: TIME := T#3S;
	pwm							: FB_PWM;
	Command	 		  			: BOOL;
	Timeout						: TON;
	PermIntlkOK					: BOOL;
END_VAR
VAR_OUTPUT
	MagnetIsOn					: BOOL;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[_M_EvaluatePermIntlk();
_M_EvaluateCommands();

//Configuration
IF GVL_General.stSwitchConfig.UseNominalCurrentVeloSetpoints THEN
    GVL_General.stSwitchStatus.CurrentTheoreticalEstimation     := GVL_General.stSwitchConfig.SwitchCurrentNominal;
ELSE
    GVL_General.stSwitchStatus.CurrentTheoreticalEstimation     := F_CurrentVelocity(Velocity := GVL_General.stMoverConfig.NormalVelo, a := GVL_General.stSwitchConfig.SwitchModeHMI.CurrentFunctionCoeffA, b := GVL_General.stSwitchConfig.SwitchModeHMI.CurrentFunctionCoeffB, c := GVL_General.stSwitchConfig.SwitchModeHMI.CurrentFunctionCoeffC);
END_IF

GVL_General.stSwitchStatus.CurrentOutputMax     := GVL_General.stSwitchStatus.CurrentTheoreticalEstimation;

//Output
IF PermIntlkOK AND Command THEN
	GVL_General.stSwitchStatus.MagnetValue := LREAL_TO_INT(GVL_General.stSwitchStatus.CurrentOutputMax*stSwitchConfig.CurrentMultFactor);
ELSE
	GVL_General.stSwitchStatus.MagnetValue := 0;
END_IF

MagnetIsOn	:= (GVL_General.stSwitchStatus.MagnetValue > 0);

IF stSwitchConfig.CurrentMultFactor <> 0 THEN
    GVL_General.stSwitchStatus.CurrentOutputActual  := GVL_General.stSwitchStatus.MagnetValue / stSwitchConfig.CurrentMultFactor;
END_IF

pwm();

//Use Magnet feedback to this timer; set preset time based on mover velocity
Timeout(IN := MagnetIsOn, PT := TimeoutTime);]]></ST>
    </Implementation>
    <Method Name="_M_EvaluateCommands" Id="{18a83905-5928-0097-0202-56fb98387126}">
      <Declaration><![CDATA[METHOD PRIVATE _M_EvaluateCommands
VAR_INST
	nForCounter		: UDINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT PermIntlkOK OR Timeout.Q THEN
	Command		:= FALSE;
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="_M_EvaluatePermIntlk" Id="{3a22a851-b422-04e5-2ba2-2e1e3a932bd8}">
      <Declaration><![CDATA[METHOD PRIVATE _M_EvaluatePermIntlk]]></Declaration>
      <Implementation>
        <ST><![CDATA[PermIntlkOK	:= SafetyPermIntlk AND NOT Timeout.Q;]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_EvaluateInlineCommands" Id="{76dc13a7-b013-0892-3e05-7bb942654e1e}">
      <Declaration><![CDATA[METHOD M_EvaluateInlineCommands
VAR
	stMoverDivertInit : RingBuffer.ST_MoverDivert;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF stDivertingMover.MoverID <> 0 THEN
	IF GVL_Mc3.TrackSectors[stDivertingMover.MoverID].SectorStatus[GC.MAG_ON_SECTOR_OPART].MoverIsOnSector THEN
		Command								:= TRUE;
		fbPlanarXtsMover[stDivertingMover.MoverID].P_IsUsingMagnet := TRUE;
	ELSIF GVL_Mc3.TrackSectors[stDivertingMover.MoverID].SectorStatus[GC.MAG_ON_SECTOR_OPART].MoverExitedSector.Q THEN
		Command								:= FALSE; // Any mover exiting the Magnet drops the command
		fbPlanarXtsMover[stDivertingMover.MoverID].P_CmdDivert			:= FALSE;
		fbPlanarXtsMover[stDivertingMover.MoverID].P_IsUsingMagnet 	:= FALSE;
		stSwitchStatus.ShuttleQueueCount := stSwitchStatus.ShuttleQueueCount -1;
	END_IF
END_IF]]></ST>
      </Implementation>
    </Method>
    <Property Name="P_PermIntlkOK" Id="{f87c32dd-cae1-0f90-29fa-c766eb8aab84}">
      <Declaration><![CDATA[PROPERTY P_PermIntlkOK : BOOL]]></Declaration>
      <Get Name="Get" Id="{4701e452-f323-0dba-2f8b-aff9cbc66282}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[P_PermIntlkOK := PermIntlkOK;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{e0591e6f-c681-08bd-1bc4-4d15b87d214b}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[PermIntlkOK := P_PermIntlkOK;]]></ST>
        </Implementation>
      </Set>
    </Property>
  </POU>
</TcPlcObject>