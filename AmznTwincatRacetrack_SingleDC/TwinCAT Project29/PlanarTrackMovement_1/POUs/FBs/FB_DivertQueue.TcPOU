<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="FB_DivertQueue" Id="{6d05417c-3e76-051c-28a5-89303f3d9e18}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_DivertQueue
VAR
	nForCounterInterval			: UDINT;
END_VAR
VAR_OUTPUT
	DivertingMoverIndex				: UDINT := GC.nNumMinMovers;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="M_UpdateAtTrig" Id="{6ebfa865-70ed-099f-252e-a28cbe294425}">
      <Declaration><![CDATA[METHOD M_UpdateAtTrig
]]></Declaration>
      <Implementation>
        <ST><![CDATA[//Increment counter, mark each mover for divert interval
FOR nForCounterInterval := GC.nNumMinMovers TO GVL_General.nNumMovers DO

	IF TrackSectors[nForCounterInterval].afbSector[GC.MAG_TRIG_SECTOR_OPART_END].stTrackSectorStatus.MoverEnteredSector.Q THEN
		GVL_General.stSwitchStatus.ShuttleCountAtDivertTrig		:= GVL_General.stSwitchStatus.ShuttleCountAtDivertTrig +1; //always MODing this; don't need to decrement
		DivertingMoverIndex	:= nForCounterInterval; // capture the index
	END_IF

	IF (GVL_General.stSwitchStatus.ShuttleDivertQueueCount + TrackSectors[nForCounterInterval].SingularSectorStatus[GC.SHORTCUT_ENTRY_HALF_IPART].MoverCountOnSector) < 
		GVL_General.stSwitchConfig.SwitchModeInternal.MaxAllowedDivertCount THEN
	
		IF (DivertingMoverIndex = fbPlanarXtsMover[nForCounterInterval].P_MoverId) AND NOT fbPlanarXtsMover[nForCounterInterval].P_CmdDivert THEN
			fbPlanarXtsMover[DivertingMoverIndex].P_CmdDivert			:= TRUE;
			GVL_General.stSwitchStatus.ShuttleDivertQueueCount			:= GVL_General.stSwitchStatus.ShuttleDivertQueueCount +1;
			IF (((GVL_General.stSwitchStatus.ShuttleCountAtDivertTrig MOD GVL_General.stSwitchConfig.SwitchModeInternal.IntervalToDivert) +1) = GVL_General.stSwitchConfig.SwitchModeInternal.IntervalToDivert) THEN
				fbPlanarXtsMover[DivertingMoverIndex].P_CmdIntvl		:= TRUE;
			END_IF
		ELSE  // Also written false when mover if magnet 
			fbPlanarXtsMover[DivertingMoverIndex].P_CmdDivert			:= FALSE;
			fbPlanarXtsMover[DivertingMoverIndex].P_CmdIntvl			:= FALSE;
		END_IF

	END_IF
	
	//Evaluate mover commands, update ShuttleCount inline
	fbPlanarXtsMover[nForCounterInterval].M_EvaluateCommands();

END_FOR]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>